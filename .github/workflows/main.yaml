name: Main

on:
    push:
    pull_request:

jobs:
    php-cs-fixer:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['7.4', '8.0']
            fail-fast: false
        name: Coding Standards
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  tools: php-cs-fixer

            - name: PHP Coding Standards Fixer
              run: php-cs-fixer --diff --dry-run --using-cache=no -v fix src
    
    php-stan:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['7.4', '8.0']
            fail-fast: false
        name: PHPStan
        steps:
            - uses: actions/checkout@v2
            - uses: php-actions/composer@v6 # or alternative dependency management
            - uses: php-actions/phpstan@v3
              with:
                  configuration: tools/phpstan/phpstan.neon
                  version: composer
    
    phpunit:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['7.4', '8.0']
            fail-fast: false
        name: PHP ${{ matrix.php-versions }} tests
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}

            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist

            - name: Run tests
              run: vendor/bin/phpunit
